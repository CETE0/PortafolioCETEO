@tailwind base;
@tailwind components;
@tailwind utilities;

/* Minimal image styles for aspect ratio preservation */
@layer components {
  .optimized-image {
    @apply w-full h-full;
    @apply object-contain;
  }
}

/* Loading spinner animation */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.animate-spin {
  animation: spin 1s linear infinite;
}

/* Pulse animation for loading indicator */
@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

/* Game-specific styles */
.glitch-effect {
  background-position: 0 0;
  animation: glitch 0.3s infinite;
}

.glitch-effect-2 {
  background-position: 0 0;
  animation: glitch 0.3s infinite;
  animation-delay: 0.1s;
  mix-blend-mode: multiply;
}

.glitch-effect-3 {
  background-position: 0 0;
  animation: glitch 0.3s infinite;
  animation-delay: 0.2s;
  mix-blend-mode: screen;
}

.hit-flash {
  animation: hitFlash 0.2s ease-out;
}

@keyframes glitch {
  0%, 100% { transform: translateX(0); }
  20% { transform: translateX(-2px); }
  40% { transform: translateX(2px); }
  60% { transform: translateX(-1px); }
  80% { transform: translateX(1px); }
}

@keyframes hitFlash {
  0%, 100% { 
    filter: brightness(1) contrast(1) saturate(1);
  }
  50% { 
    filter: brightness(1.5) contrast(1.2) saturate(1.5);
  }
}

/* Perspective for 3D effects */
.perspective-1000 {
  perspective: 1000px;
}

/* Preloading completion animation */
@keyframes preloadComplete {
  0% { 
    opacity: 1; 
    transform: scale(1);
  }
  20% { 
    opacity: 1; 
    transform: scale(1.1);
  }
  40% { 
    opacity: 0.7; 
    transform: scale(1);
  }
  60% { 
    opacity: 1; 
    transform: scale(1.05);
  }
  80% { 
    opacity: 0.8; 
    transform: scale(1);
  }
  100% { 
    opacity: 0; 
    transform: scale(0.95);
  }
}

.animate-preload-complete {
  animation: preloadComplete 1.5s ease-out forwards;
}

.custom-cursor {
  position: fixed;
  width: 20px;
  height: 20px;
  pointer-events: none;
  z-index: 10000;
  display: none; /* Hidden by default */
}

.crosshair {
  position: relative;
  width: 100%;
  height: 100%;
  transition: transform 0.4s ease-out;
}

.custom-cursor.clicked .crosshair {
  transform: rotate(180deg);
}

.crosshair::before,
.crosshair::after {
  content: '';
  position: absolute;
  background-color: black;
  transition: background-color 0.2s ease;
}

/* Vertical line */
.crosshair::before {
  left: 50%;
  top: 0;
  width: 2px;
  height: 100%;
  transform: translateX(-50%);
}

/* Horizontal line */
.crosshair::after {
  left: 0;
  top: 50%;
  width: 100%;
  height: 2px;
  transform: translateY(-50%);
}

.custom-cursor.hover .crosshair::before,
.custom-cursor.hover .crosshair::after {
  background-color: red;
}

/* Show custom cursor and hide default on devices that can hover (i.e. not touch) */
@media (hover: hover) and (pointer: fine) {
  body {
    cursor: none;
  }
  .custom-cursor {
    display: block;
  }
  a,
  button,
  [role="button"],
  .cursor-pointer {
    cursor: none;
  }
}
